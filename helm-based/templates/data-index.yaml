kind: Deployment
apiVersion: apps/v1
metadata:
  name: data-index
  namespace: sonataflow-infra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-index
  template:
    metadata:
      labels:
        app: data-index
    spec:
      containers:
      - name: data-index
        image: quay.io/kiegroup/kogito-data-index-postgresql:1.42
# https://access.redhat.com/solutions/7002730
{{if eq .Values.clusterPlatform "openshift"}}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
{{end}}        
        ports:
        - containerPort: {{.Values.dataindex.port}}
        env:
        - name: QUARKUS_DATASOURCE_JDBC_URL
          value: "jdbc:postgresql://postgres-db-service:{{.Values.postgres.port}}/{{.Values.postgres.dbname}}?currentSchema=data-index-service"
        - name: QUARKUS_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_USER
        - name: QUARKUS_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_PASSWORD
        - name: QUARKUS_HTTP_CORS_ORIGINS
          value: "/.*/"
        - name: QUARKUS_PROFILE
          value: http-events-support
        - name: KOGITO_DATA_INDEX_QUARKUS_PROFILE
          value: http-events-support
        - name: QUARKUS_FLYWAY_MIGRATE_AT_START
          value: "true"
        - name: QUARKUS_FLYWAY_TABLE
          value: data-index-flyway
        - name: QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION
          value: update
        - name: KOGITO_DATA_INDEX_PROPS
          value: "-Dquarkus.hibernate-orm.database.generation=update -Dquarkus.log.category.\"org.kie.kogito.index\".min-level=DEBUG -Dquarkus.log.category.\"org.kie.kogito.index\".level=DEBUG"
      initContainers:
        - name: init-postgres
          image: busybox:1.36
# https://access.redhat.com/solutions/7002730
{{if eq .Values.clusterPlatform "openshift"}}
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
{{end}}           
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until nc -vz postgres-db-service.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local {{.Values.postgres.port}}; do echo "Waiting for postgres server"; sleep 3; done;']
---
kind: Service
apiVersion: v1
metadata:
  name: data-index-service
  namespace: sonataflow-infra
  labels: 
      app: data-index
spec:
  selector:
    app: data-index
  ports:
    - protocol: TCP
      port: 80
      targetPort: {{.Values.dataindex.port}}
  type: NodePort